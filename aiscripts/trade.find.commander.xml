<?xml version="1.0" encoding="utf-8" ?>

<!-- Add in the code to encourage trades between logistically-linked stations -->
<diff>
    <add sel="/aiscript[@name='trade.find.commander']/attention/actions/label[@name='start']" pos="before">
        <!-- Ships are not supposed to change commanders in the middle of the script, so we can precalculate something for the ship. -->
        <!-- 
            But how about stations joining/leaving the logistics network?
            Still no problem: this script is called regularly when the game attempts to find a trade deal to execute.
            The state of the script and the logistics network is refreshed regularly; the script will always see the latest version of the network.
        -->
        <set_value name="$mayWorkInLogNet" exact="false" comment="Default is false, unless it satisfies the conditions below" />
        <set_value name="$stationCommander" exact="null" />
        <do_if value="this.ship.isplayerowned">
            <!-- Determine if we are trading for station or trading for buildstorage -->
            <do_if value="$homebase.isclass.station">
                <set_value name="$stationCommander" exact="$homebase" />
                <show_help position="1" duration="5s" custom="'Station commander; checking commander is now %s'.[$stationCommander.knownname]" chance="0"/>
            </do_if>
            <do_elseif value="$homebase.isclass.buildstorage">
                <set_value name="$stationCommander" exact="$homebase.base" comment="Read the station!" />
                <show_help position="1" duration="5s" custom="'Buildstorage commander; checking commander is now %s'.[$stationCommander.knownname]" chance="0"/>
            </do_elseif>
            <do_if value="$stationCommander != null">
                <!-- OK: found the station, but still, check whether the station is valid participant of Logistics Network -->
                <set_value name="$mayWorkInLogNet" exact="$stationCommander.exists and (not $stationCommander.iswreck) and global.$statLogNet.{$stationCommander}?" />
            </do_if>
        </do_if>
        <do_if value="this.ship.isplayerowned" chance="0">
            <show_help position="1" duration="5s" custom="'' + global.$statLogNet" chance="0"/>
            <show_help position="1" duration="5s" custom="'Station logistics: trader participation:' + $mayWorkInLogNet" chance="0"/>
        </do_if>
    </add>

    <add sel="/aiscript[@name='trade.find.commander']/attention/actions/do_if[@value='$selloffers.count gt 0']/do_all/do_all/do_for_each/do_if[2]" pos="before">
        <!-- Add code to adjust station-export-wares -->
        <!-- This should be right after setting the tradevalue but before any checking can begin -->
        <set_value name="$tradePartner" exact="$buyoffer_local.owner" />
        <do_if value="$tradePartner.isclass.buildstorage">
            <set_value name="$tradePartner" exact="$tradePartner.base" comment="Read the station!" />
        </do_if>
        <do_if value="$mayWorkInLogNet and global.$statLogNet.{$stationCommander}.{$tradePartner}?">
            <!-- Hit. -->
            <show_help position="1" duration="10s" custom="'Station logistics: trade encouraged.'" chance="0"/>
            <set_value name="$preferenceMulti" exact="1.25" />
            <do_if value="$stationCommander.istradestation and $tradePartner.istradestation">
                <set_value name="$preferenceMulti" exact="1.125" comment="Avoid moving wares back-and-forth between trade stations if they can be pushed to other local stations" />
            </do_if>
            <set_value name="$loctradevalue" exact="$loctradevalue * $preferenceMulti" comment="Encourage selling to this target" />
        </do_if>
        <remove_value name="$tradePartner" comment="Out-of-scope variable removal" />
    </add>

    <add sel="/aiscript[@name='trade.find.commander']/attention/actions/do_if[@value='$buyoffers.count gt 0']/do_all/do_all/do_for_each/do_if[2]" pos="before">
        <!-- Add code to adjust station-import-wares -->
        <!-- This should be right after setting the tradevalue but before any checking can begin -->
        <set_value name="$tradePartner" exact="$selloffer_local.owner" />
        <do_if value="$tradePartner.isclass.buildstorage">
            <set_value name="$tradePartner" exact="$tradePartner.base" comment="NOTE: supposedly, buildstorages cannot sell wares, but by defensive programming principles, also read its station." />
        </do_if>
        <do_if value="$mayWorkInLogNet and global.$sattionLogisticsNetwork.{$stationCommander}.{$tradePartner}?">
            <!-- Hit. -->
            <show_help position="1" duration="10s" custom="'Station logistics: trade encouraged.'" chance="0"/>
            <set_value name="$preferenceMulti" exact="1.25" />
            <do_if value="$stationCommander.istradestation and $tradePartner.istradestation">
                <set_value name="$preferenceMulti" exact="1.125" comment="Avoid moving wares back-and-forth between trade stations if they can be pushed to other local stations" />
            </do_if>
            <set_value name="$loctradevalue" exact="$loctradevalue * $preferenceMulti" comment="Encourage buying from this target" />
        </do_if>
        <remove_value name="$tradePartner" comment="Out-of-scope variable removal" />
    </add>
</diff>
