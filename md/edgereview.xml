<?xml version="1.0" encoding="utf-8"?>
<!-- Copied and modified from the Guidance script -->
<mdscript name="EdgeReview" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
    <cues>
        <!-- We use a mission to highlight the items on the map. -->
        <!-- Referencing the Signal Leak Hunter mod for a very clear and minimal structure of how a mission actually works. -->
        <cue name="StationHighlightMission">
            <cues>
                <!--This cue only triggers if EdgeReview is waiting. Otherwise UpdateTarget is triggered-->
                <cue name="NewTarget" instantiate="true">
                    <conditions>
                        <!-- Requesting the logistics guidance of a station, and we are not currently showing guidance for some other stations. -->
                        <event_cue_signalled />
                        <cue_is_waiting cue="GuidanceHandler"/>
                    </conditions>
                    <actions>
                        <show_help position="1" duration="2s" custom="'EdgeReview.NewTarget'" chance="0"/>
                        <set_value name="$Arguments" exact="event.param"/>
                        <set_value name="$Target" exact="$Arguments.{1}"/>
                        <signal_cue_instantly cue="GuidanceHandler" />
                        <remove_value name="$Arguments"/>
                    </actions>
                </cue>

                <!--param = Aborted?-->
                <cue name="EndGuidance" instantiate="true">
                    <conditions>
                        <event_cue_signalled comment="arugments passed with param" />
                    </conditions>
                    <actions>
                        <show_help position="1" duration="2s" custom="'EdgeReview.EndGuidance'" chance="0"/>
                        <set_value name="$Arguments" exact="event.param"/>
                        <cancel_cue cue="GuidanceLost"/>
                        <do_if value="@$Arguments">
                            <remove_mission cue="StationHighlightMission" type="aborted" activate="previous" />
                        </do_if>
                        <do_else>
                            <remove_mission cue="StationHighlightMission" activate="previous" />
                        </do_else>
                        <reset_cue cue="StationHighlightMission"/>
                        <remove_value name="$Arguments"/>
                    </actions>
                </cue>

                <cue name="GuidanceHandler">
                    <conditions>
                        <event_cue_signalled/>
                    </conditions>
                    <actions>
                        <show_help position="1" duration="2s" custom="'EdgeReview.GuidanceHandler'" chance="0"/>
                        <!-- I do not know how to make this code cleaner. The create-mission is appearing in two different places. -->

                        <!-- $Target already set in NewTarget (i.e., init) or in NextTargetEventListener -->
                        <set_value name="$Target" exact="$Arguments.{1}"/>
                        <cancel_cue cue="GuidanceLost"/>
                        
                        <!-- Find logistics partners -->
                        <create_group groupname="$guidanceGroup" />
                        <do_if value="@global.$statLogNet.{$Target}">
                            <!-- Add everything into the system -->
                            <do_for_each name="$otherStation" in="global.$statLogNet.{$Target}">
                                <show_help position="1" duration="2s" custom="'' + $otherStation.knownname" chance="0"/>
                                <add_to_group groupname="$guidanceGroup" object="$otherStation" />
                            </do_for_each>
                        </do_if>

                        <!-- Remove previous mission if exists -->
                        <do_if value="StationHighlightMission.hasmission">
                            <remove_mission cue="StationHighlightMission"/>
                        </do_if>
                        <!-- And then create a new mission -->
                        <create_mission cue="StationHighlightMission" name="{231024, 6001}" description="{231024, 6002}.[$Target.knownname]" faction="faction.player" type="missiontype.guidance">
                            <briefing>
                                <objective step="1" action="objective.custom" group="$guidanceGroup" customaction="{231024, 6003}" />
                            </briefing>
                            <objective step="1" action="objective.custom" group="$guidanceGroup" customaction="{231024, 6004}" />
                        </create_mission>
                        <remove_value name="$Arguments"/>
                    </actions>
                    <cues>
                        <cue name="NextTargetEventListener" instantiate="true">
                            <conditions>
                                <!-- A new guidance target on top of the current target: replace current target -->
                                <event_cue_signalled cue="NewTarget" comment="arugments passed with param" />
                            </conditions>
                            <actions>
                                <show_help position="1" duration="2s" custom="'EdgeReview.NextTargetEventListener'" chance="0"/>
                                <set_value name="$Arguments" exact="event.param"/>
                                <set_value name="$Target" exact="$Arguments.{1}"/>

                                <!-- $Target already set in NewTarget (i.e., init) or in NextTargetEventListener -->
                                <set_value name="$Target" exact="$Arguments.{1}"/>
                                <cancel_cue cue="GuidanceLost"/>
                                
                                <!-- Find logistics partners -->
                                <create_group groupname="$guidanceGroup" />
                                <do_if value="@global.$statLogNet.{$Target}">
                                    <!-- Add everything into the system -->
                                    <do_for_each name="$otherStation" in="global.$statLogNet.{$Target}">
                                        <show_help position="1" duration="2s" custom="'' + $otherStation.knownname" chance="0"/>
                                        <add_to_group groupname="$guidanceGroup" object="$otherStation" />
                                    </do_for_each>
                                </do_if>

                                <!-- Remove previous mission if exists -->
                                <do_if value="StationHighlightMission.hasmission">
                                    <remove_mission cue="StationHighlightMission"/>
                                </do_if>
                                <!-- And then create a new mission -->
                                <create_mission cue="StationHighlightMission" name="{231024, 6001}" description="{231024, 6002}.[$Target.knownname]" faction="faction.player" type="missiontype.guidance">
                                    <briefing>
                                        <objective step="1" action="objective.custom" group="$guidanceGroup" customaction="{231024, 6003}" />
                                    </briefing>
                                    <objective step="1" action="objective.custom" group="$guidanceGroup" customaction="{231024, 6004}" />
                                </create_mission>
                                <remove_value name="$Arguments"/>

                                <!-- Signal the computer to update the guidance lines -->
                                <signal_objects object="player.computer" param="'guidance_updated'" />
                                <reset_cue cue="ComponentDestroyed"/>
                                <reset_cue cue="GuidanceLost"/>
                                <remove_value name="$Arguments"/>
                            </actions>
                        </cue>

                        <cue name="Aborted">
                            <conditions>
                                <event_mission_aborted cue="StationHighlightMission"/>
                            </conditions>
                            <actions>
                                <debug_text text="'Aborted'"/>
                                <signal_cue_instantly cue="EndGuidance" param="true"/>
                            </actions>
                        </cue>

                        <cue name="ComponentDestroyed">
                            <conditions>
                                <event_object_destroyed object="$Target"/>
                            </conditions>
                            <actions>
                                <debug_text text="'ComponentDestroyed'"/>
                                <signal_cue_instantly cue="EndGuidance" />
                            </actions>
                        </cue>

                        <!--For the case of another mission becoming active, abort the Guidance Mission-->
                        <cue name="GuidanceLost">
                            <conditions>
                                <event_guidance_disabled cue="StationHighlightMission"/>
                            </conditions>
                            <actions>
                                <debug_text text="'GuidanceLost'"/>
                                <signal_cue_instantly cue="EndGuidance" />
                            </actions>
                        </cue>
                    </cues>
                </cue>
            </cues>
        </cue>
    </cues>
</mdscript>